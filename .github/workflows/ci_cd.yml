name: CI_CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Node.js (if your app has Node.js components like frontend)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Install dependencies (optional for Node.js projects)
      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            npm ci
          fi

      # 4Ô∏è‚É£ Quick server test (optional for frontend)
      - name: Run simple server test
        run: |
          npm install -g http-server
          npx http-server -p 8080 & 
          sleep 5
          curl -f http://localhost:8080 || exit 1
          echo "‚úÖ Server test passed"

      # 5Ô∏è‚É£ Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 6Ô∏è‚É£ Login to Azure Container Registry (ACR)
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: neighbourhood.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 7Ô∏è‚É£ Build and Push Docker Image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            neighbourhood.azurecr.io/neighbourhood:v1
            neighbourhood.azurecr.io/neighbourhood:latest

      # 8Ô∏è‚É£ Set AKS context
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: neighbour-aks
          resource-group: neighbour

      # 9Ô∏è‚É£ Deploy to AKS using Kubernetes manifests
      - name: Deploy to AKS
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml
          images: |
            neighbourhood.azurecr.io/neighbourhood:v1
          strategy: apply

      # üîü Show deployed service info
      - name: Show AKS services
        run: kubectl get svc
